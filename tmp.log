[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        Wildcard,
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "User",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: None,
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                    ],
                    lateral_views: [],
                    selection: None,
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [],
            limit: None,
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]
SELECT * FROM User

"SELECT name, gender FROM User WHERE name = \"user10\""
[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        UnnamedExpr(
                            Identifier(
                                Ident {
                                    value: "name",
                                    quote_style: None,
                                },
                            ),
                        ),
                        UnnamedExpr(
                            Identifier(
                                Ident {
                                    value: "gender",
                                    quote_style: None,
                                },
                            ),
                        ),
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "User",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: None,
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                    ],
                    lateral_views: [],
                    selection: Some(
                        BinaryOp {
                            left: Identifier(
                                Ident {
                                    value: "name",
                                    quote_style: None,
                                },
                            ),
                            op: Eq,
                            right: Identifier(
                                Ident {
                                    value: "user10",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                            ),
                        },
                    ),
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [],
            limit: None,
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]

[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        UnnamedExpr(
                            CompoundIdentifier(
                                [
                                    Ident {
                                        value: "a",
                                        quote_style: None,
                                    },
                                    Ident {
                                        value: "name",
                                        quote_style: None,
                                    },
                                ],
                            ),
                        ),
                        UnnamedExpr(
                            CompoundIdentifier(
                                [
                                    Ident {
                                        value: "a",
                                        quote_style: None,
                                    },
                                    Ident {
                                        value: "gender",
                                        quote_style: None,
                                    },
                                ],
                            ),
                        ),
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "User",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: Some(
                                    TableAlias {
                                        name: Ident {
                                            value: "a",
                                            quote_style: None,
                                        },
                                        columns: [],
                                    },
                                ),
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                    ],
                    lateral_views: [],
                    selection: Some(
                        BinaryOp {
                            left: CompoundIdentifier(
                                [
                                    Ident {
                                        value: "a",
                                        quote_style: None,
                                    },
                                    Ident {
                                        value: "name",
                                        quote_style: None,
                                    },
                                ],
                            ),
                            op: Eq,
                            right: Identifier(
                                Ident {
                                    value: "user10",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                            ),
                        },
                    ),
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [],
            limit: None,
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]

"SELECT a.title, b.readNum 
FROM Article AS a INNER JOIN BeRead AS b ON a.id = b.aid 
ORDER BY b.readNum DESC 
LIMIT 5"

[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        UnnamedExpr(
                            CompoundIdentifier(
                                [
                                    Ident {
                                        value: "a",
                                        quote_style: None,
                                    },
                                    Ident {
                                        value: "title",
                                        quote_style: None,
                                    },
                                ],
                            ),
                        ),
                        UnnamedExpr(
                            CompoundIdentifier(
                                [
                                    Ident {
                                        value: "b",
                                        quote_style: None,
                                    },
                                    Ident {
                                        value: "readNum",
                                        quote_style: None,
                                    },
                                ],
                            ),
                        ),
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "Article",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: Some(
                                    TableAlias {
                                        name: Ident {
                                            value: "a",
                                            quote_style: None,
                                        },
                                        columns: [],
                                    },
                                ),
                                args: None,
                                with_hints: [],
                            },
                            joins: [
                                Join {
                                    relation: Table {
                                        name: ObjectName(
                                            [
                                                Ident {
                                                    value: "BeRead",
                                                    quote_style: None,
                                                },
                                            ],
                                        ),
                                        alias: Some(
                                            TableAlias {
                                                name: Ident {
                                                    value: "b",
                                                    quote_style: None,
                                                },
                                                columns: [],
                                            },
                                        ),
                                        args: None,
                                        with_hints: [],
                                    },
                                    join_operator: Inner(
                                        On(
                                            BinaryOp {
                                                left: CompoundIdentifier(
                                                    [
                                                        Ident {
                                                            value: "a",
                                                            quote_style: None,
                                                        },
                                                        Ident {
                                                            value: "id",
                                                            quote_style: None,
                                                        },
                                                    ],
                                                ),
                                                op: Eq,
                                                right: CompoundIdentifier(
                                                    [
                                                        Ident {
                                                            value: "b",
                                                            quote_style: None,
                                                        },
                                                        Ident {
                                                            value: "aid",
                                                            quote_style: None,
                                                        },
                                                    ],
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ],
                        },
                    ],
                    lateral_views: [],
                    selection: None,
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [
                OrderByExpr {
                    expr: CompoundIdentifier(
                        [
                            Ident {
                                value: "b",
                                quote_style: None,
                            },
                            Ident {
                                value: "readNum",
                                quote_style: None,
                            },
                        ],
                    ),
                    asc: Some(
                        false,
                    ),
                    nulls_first: None,
                },
            ],
            limit: Some(
                Value(
                    Number(
                        "5",
                        false,
                    ),
                ),
            ),
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]

"SELECT * FROM User, Article"
[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        Wildcard,
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "User",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: None,
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "Article",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: None,
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                    ],
                    lateral_views: [],
                    selection: None,
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [],
            limit: None,
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]
SELECT * FROM User, Article


"SELECT name, gender FROM User WHERE id < 100 AND region = \"Beijing\""
[
    Query(
        Query {
            with: None,
            body: Select(
                Select {
                    distinct: false,
                    top: None,
                    projection: [
                        UnnamedExpr(
                            Identifier(
                                Ident {
                                    value: "name",
                                    quote_style: None,
                                },
                            ),
                        ),
                        UnnamedExpr(
                            Identifier(
                                Ident {
                                    value: "gender",
                                    quote_style: None,
                                },
                            ),
                        ),
                    ],
                    into: None,
                    from: [
                        TableWithJoins {
                            relation: Table {
                                name: ObjectName(
                                    [
                                        Ident {
                                            value: "User",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                alias: None,
                                args: None,
                                with_hints: [],
                            },
                            joins: [],
                        },
                    ],
                    lateral_views: [],
                    selection: Some(
                        BinaryOp {
                            left: BinaryOp {
                                left: Identifier(
                                    Ident {
                                        value: "id",
                                        quote_style: None,
                                    },
                                ),
                                op: Lt,
                                right: Value(
                                    Number(
                                        "100",
                                        false,
                                    ),
                                ),
                            },
                            op: And,
                            right: BinaryOp {
                                left: Identifier(
                                    Ident {
                                        value: "region",
                                        quote_style: None,
                                    },
                                ),
                                op: Eq,
                                right: Identifier(
                                    Ident {
                                        value: "Beijing",
                                        quote_style: Some(
                                            '"',
                                        ),
                                    },
                                ),
                            },
                        },
                    ),
                    group_by: [],
                    cluster_by: [],
                    distribute_by: [],
                    sort_by: [],
                    having: None,
                    qualify: None,
                },
            ),
            order_by: [],
            limit: None,
            offset: None,
            fetch: None,
            lock: None,
        },
    ),
]